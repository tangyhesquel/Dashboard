//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcDashBoard.Model.DASHBOARD.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DASHBOARD_EMPLOYEE_ATTENDTIME> DASHBOARD_EMPLOYEE_ATTENDTIME { get; set; }
        public virtual DbSet<DASHBOARD_LINE_RATIO> DASHBOARD_LINE_RATIO { get; set; }
        public virtual DbSet<DASHBOARD_LINE_SHIFT_SETTING> DASHBOARD_LINE_SHIFT_SETTING { get; set; }
        public virtual DbSet<DASHBOARD_MESSAGE_DEFINITION> DASHBOARD_MESSAGE_DEFINITION { get; set; }
        public virtual DbSet<DASHBOARD_PRODUCTION_DATA> DASHBOARD_PRODUCTION_DATA { get; set; }
        public virtual DbSet<DASHBOARD_QA_PI_HD> DASHBOARD_QA_PI_HD { get; set; }
    
        [DbFunction("Entities", "FN_DASHBOARD_DETAIL_QTY")]
        public virtual IQueryable<FN_DASHBOARD_DETAIL_QTY_Result> FN_DASHBOARD_DETAIL_QTY(string fACTORY_CD, string lINE, string sHIFT, Nullable<System.DateTime> tRSdate)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var lINEParameter = lINE != null ?
                new ObjectParameter("LINE", lINE) :
                new ObjectParameter("LINE", typeof(string));
    
            var sHIFTParameter = sHIFT != null ?
                new ObjectParameter("SHIFT", sHIFT) :
                new ObjectParameter("SHIFT", typeof(string));
    
            var tRSdateParameter = tRSdate.HasValue ?
                new ObjectParameter("TRSdate", tRSdate) :
                new ObjectParameter("TRSdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_DETAIL_QTY_Result>("[Entities].[FN_DASHBOARD_DETAIL_QTY](@FACTORY_CD, @LINE, @SHIFT, @TRSdate)", fACTORY_CDParameter, lINEParameter, sHIFTParameter, tRSdateParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_FACTORY")]
        public virtual IQueryable<FN_DASHBOARD_FACTORY_Result> FN_DASHBOARD_FACTORY(string fACTORY_CD)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_FACTORY_Result>("[Entities].[FN_DASHBOARD_FACTORY](@FACTORY_CD)", fACTORY_CDParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_GARMENT_TYPE")]
        public virtual IQueryable<FN_DASHBOARD_GARMENT_TYPE_Result> FN_DASHBOARD_GARMENT_TYPE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_GARMENT_TYPE_Result>("[Entities].[FN_DASHBOARD_GARMENT_TYPE]()");
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_LINE")]
        public virtual IQueryable<FN_DASHBOARD_LINE_Result> FN_DASHBOARD_LINE(string fACTORY_CD, string lINE)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var lINEParameter = lINE != null ?
                new ObjectParameter("LINE", lINE) :
                new ObjectParameter("LINE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_LINE_Result>("[Entities].[FN_DASHBOARD_LINE](@FACTORY_CD, @LINE)", fACTORY_CDParameter, lINEParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_LINE_ACTUAL_HEAD_COUNT")]
        public virtual IQueryable<FN_DASHBOARD_LINE_ACTUAL_HEAD_COUNT_Result> FN_DASHBOARD_LINE_ACTUAL_HEAD_COUNT(string fACTORY_CD, string pRODUCTION_LINE_CD)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var pRODUCTION_LINE_CDParameter = pRODUCTION_LINE_CD != null ?
                new ObjectParameter("PRODUCTION_LINE_CD", pRODUCTION_LINE_CD) :
                new ObjectParameter("PRODUCTION_LINE_CD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_LINE_ACTUAL_HEAD_COUNT_Result>("[Entities].[FN_DASHBOARD_LINE_ACTUAL_HEAD_COUNT](@FACTORY_CD, @PRODUCTION_LINE_CD)", fACTORY_CDParameter, pRODUCTION_LINE_CDParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_LINE_RATIO")]
        public virtual IQueryable<FN_DASHBOARD_LINE_RATIO_Result> FN_DASHBOARD_LINE_RATIO(string fACTORY_CD, string pRODUCTION_LINE_CD)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var pRODUCTION_LINE_CDParameter = pRODUCTION_LINE_CD != null ?
                new ObjectParameter("PRODUCTION_LINE_CD", pRODUCTION_LINE_CD) :
                new ObjectParameter("PRODUCTION_LINE_CD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_LINE_RATIO_Result>("[Entities].[FN_DASHBOARD_LINE_RATIO](@FACTORY_CD, @PRODUCTION_LINE_CD)", fACTORY_CDParameter, pRODUCTION_LINE_CDParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_PREVIOUS_SHIFT_DATE")]
        public virtual IQueryable<FN_DASHBOARD_PREVIOUS_SHIFT_DATE_Result> FN_DASHBOARD_PREVIOUS_SHIFT_DATE(string fACTORY_CD, string sHIFT_CD, Nullable<System.DateTime> tRX_DATE)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var sHIFT_CDParameter = sHIFT_CD != null ?
                new ObjectParameter("SHIFT_CD", sHIFT_CD) :
                new ObjectParameter("SHIFT_CD", typeof(string));
    
            var tRX_DATEParameter = tRX_DATE.HasValue ?
                new ObjectParameter("TRX_DATE", tRX_DATE) :
                new ObjectParameter("TRX_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_PREVIOUS_SHIFT_DATE_Result>("[Entities].[FN_DASHBOARD_PREVIOUS_SHIFT_DATE](@FACTORY_CD, @SHIFT_CD, @TRX_DATE)", fACTORY_CDParameter, sHIFT_CDParameter, tRX_DATEParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_PRODUCTION_QTY_BY_SHIFT_LINE")]
        public virtual IQueryable<FN_DASHBOARD_PRODUCTION_QTY_BY_SHIFT_LINE_Result> FN_DASHBOARD_PRODUCTION_QTY_BY_SHIFT_LINE(string fACTORY_CD, string lINE, string sHIFT, Nullable<System.DateTime> tRSdate)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var lINEParameter = lINE != null ?
                new ObjectParameter("LINE", lINE) :
                new ObjectParameter("LINE", typeof(string));
    
            var sHIFTParameter = sHIFT != null ?
                new ObjectParameter("SHIFT", sHIFT) :
                new ObjectParameter("SHIFT", typeof(string));
    
            var tRSdateParameter = tRSdate.HasValue ?
                new ObjectParameter("TRSdate", tRSdate) :
                new ObjectParameter("TRSdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_PRODUCTION_QTY_BY_SHIFT_LINE_Result>("[Entities].[FN_DASHBOARD_PRODUCTION_QTY_BY_SHIFT_LINE](@FACTORY_CD, @LINE, @SHIFT, @TRSdate)", fACTORY_CDParameter, lINEParameter, sHIFTParameter, tRSdateParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_SHIFT_TIME_SCHEDULE")]
        public virtual IQueryable<FN_DASHBOARD_SHIFT_TIME_SCHEDULE_Result> FN_DASHBOARD_SHIFT_TIME_SCHEDULE(string fACTORY_CD, string sHIFT, Nullable<System.DateTime> trsDate)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var sHIFTParameter = sHIFT != null ?
                new ObjectParameter("SHIFT", sHIFT) :
                new ObjectParameter("SHIFT", typeof(string));
    
            var trsDateParameter = trsDate.HasValue ?
                new ObjectParameter("TrsDate", trsDate) :
                new ObjectParameter("TrsDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_SHIFT_TIME_SCHEDULE_Result>("[Entities].[FN_DASHBOARD_SHIFT_TIME_SCHEDULE](@FACTORY_CD, @SHIFT, @TrsDate)", fACTORY_CDParameter, sHIFTParameter, trsDateParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_SHOW")]
        public virtual IQueryable<FN_DASHBOARD_SHOW_Result> FN_DASHBOARD_SHOW(string fACTORY_CD, string lINE, string sHIFT, Nullable<System.DateTime> pARAMDATE, string type)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var lINEParameter = lINE != null ?
                new ObjectParameter("LINE", lINE) :
                new ObjectParameter("LINE", typeof(string));
    
            var sHIFTParameter = sHIFT != null ?
                new ObjectParameter("SHIFT", sHIFT) :
                new ObjectParameter("SHIFT", typeof(string));
    
            var pARAMDATEParameter = pARAMDATE.HasValue ?
                new ObjectParameter("PARAMDATE", pARAMDATE) :
                new ObjectParameter("PARAMDATE", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_SHOW_Result>("[Entities].[FN_DASHBOARD_SHOW](@FACTORY_CD, @LINE, @SHIFT, @PARAMDATE, @Type)", fACTORY_CDParameter, lINEParameter, sHIFTParameter, pARAMDATEParameter, typeParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_SHOW_DATA")]
        public virtual IQueryable<FN_DASHBOARD_SHOW_DATA_Result> FN_DASHBOARD_SHOW_DATA(string fACTORY_CD, string lINE, string sHIFT, Nullable<System.DateTime> pARAMDATE)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var lINEParameter = lINE != null ?
                new ObjectParameter("LINE", lINE) :
                new ObjectParameter("LINE", typeof(string));
    
            var sHIFTParameter = sHIFT != null ?
                new ObjectParameter("SHIFT", sHIFT) :
                new ObjectParameter("SHIFT", typeof(string));
    
            var pARAMDATEParameter = pARAMDATE.HasValue ?
                new ObjectParameter("PARAMDATE", pARAMDATE) :
                new ObjectParameter("PARAMDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_SHOW_DATA_Result>("[Entities].[FN_DASHBOARD_SHOW_DATA](@FACTORY_CD, @LINE, @SHIFT, @PARAMDATE)", fACTORY_CDParameter, lINEParameter, sHIFTParameter, pARAMDATEParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_SHOW_PREVIOUS_DATA")]
        public virtual IQueryable<FN_DASHBOARD_SHOW_PREVIOUS_DATA_Result> FN_DASHBOARD_SHOW_PREVIOUS_DATA(string fACTORY_CD, string lINE, string shift_cd, Nullable<System.DateTime> pARAMDATE)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var lINEParameter = lINE != null ?
                new ObjectParameter("LINE", lINE) :
                new ObjectParameter("LINE", typeof(string));
    
            var shift_cdParameter = shift_cd != null ?
                new ObjectParameter("shift_cd", shift_cd) :
                new ObjectParameter("shift_cd", typeof(string));
    
            var pARAMDATEParameter = pARAMDATE.HasValue ?
                new ObjectParameter("PARAMDATE", pARAMDATE) :
                new ObjectParameter("PARAMDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_SHOW_PREVIOUS_DATA_Result>("[Entities].[FN_DASHBOARD_SHOW_PREVIOUS_DATA](@FACTORY_CD, @LINE, @shift_cd, @PARAMDATE)", fACTORY_CDParameter, lINEParameter, shift_cdParameter, pARAMDATEParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_TARGET_QTY")]
        public virtual IQueryable<FN_DASHBOARD_TARGET_QTY_Result> FN_DASHBOARD_TARGET_QTY(string fACTORY_CD, string lINE, string sHIFT, Nullable<System.DateTime> tRSdate, Nullable<int> time_Minute, Nullable<int> headCount)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var lINEParameter = lINE != null ?
                new ObjectParameter("LINE", lINE) :
                new ObjectParameter("LINE", typeof(string));
    
            var sHIFTParameter = sHIFT != null ?
                new ObjectParameter("SHIFT", sHIFT) :
                new ObjectParameter("SHIFT", typeof(string));
    
            var tRSdateParameter = tRSdate.HasValue ?
                new ObjectParameter("TRSdate", tRSdate) :
                new ObjectParameter("TRSdate", typeof(System.DateTime));
    
            var time_MinuteParameter = time_Minute.HasValue ?
                new ObjectParameter("Time_Minute", time_Minute) :
                new ObjectParameter("Time_Minute", typeof(int));
    
            var headCountParameter = headCount.HasValue ?
                new ObjectParameter("HeadCount", headCount) :
                new ObjectParameter("HeadCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_TARGET_QTY_Result>("[Entities].[FN_DASHBOARD_TARGET_QTY](@FACTORY_CD, @LINE, @SHIFT, @TRSdate, @Time_Minute, @HeadCount)", fACTORY_CDParameter, lINEParameter, sHIFTParameter, tRSdateParameter, time_MinuteParameter, headCountParameter);
        }
    
        [DbFunction("Entities", "FN_DASHBOARD_TIME_INTERVAL_QTY")]
        public virtual IQueryable<FN_DASHBOARD_TIME_INTERVAL_QTY_Result> FN_DASHBOARD_TIME_INTERVAL_QTY(string fACTORY_CD, string lINE, string sHIFT, Nullable<System.DateTime> tRSdate)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var lINEParameter = lINE != null ?
                new ObjectParameter("LINE", lINE) :
                new ObjectParameter("LINE", typeof(string));
    
            var sHIFTParameter = sHIFT != null ?
                new ObjectParameter("SHIFT", sHIFT) :
                new ObjectParameter("SHIFT", typeof(string));
    
            var tRSdateParameter = tRSdate.HasValue ?
                new ObjectParameter("TRSdate", tRSdate) :
                new ObjectParameter("TRSdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_DASHBOARD_TIME_INTERVAL_QTY_Result>("[Entities].[FN_DASHBOARD_TIME_INTERVAL_QTY](@FACTORY_CD, @LINE, @SHIFT, @TRSdate)", fACTORY_CDParameter, lINEParameter, sHIFTParameter, tRSdateParameter);
        }
    
        public virtual int PROC_DASHBOARD_GET_EMPLOYEE_ATTENDTIME(string fACTORY_CD, string lINE, string sHIFT, Nullable<System.DateTime> paramDateTime, string only1Line)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var lINEParameter = lINE != null ?
                new ObjectParameter("LINE", lINE) :
                new ObjectParameter("LINE", typeof(string));
    
            var sHIFTParameter = sHIFT != null ?
                new ObjectParameter("SHIFT", sHIFT) :
                new ObjectParameter("SHIFT", typeof(string));
    
            var paramDateTimeParameter = paramDateTime.HasValue ?
                new ObjectParameter("ParamDateTime", paramDateTime) :
                new ObjectParameter("ParamDateTime", typeof(System.DateTime));
    
            var only1LineParameter = only1Line != null ?
                new ObjectParameter("Only1Line", only1Line) :
                new ObjectParameter("Only1Line", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DASHBOARD_GET_EMPLOYEE_ATTENDTIME", fACTORY_CDParameter, lINEParameter, sHIFTParameter, paramDateTimeParameter, only1LineParameter);
        }
    
        public virtual int PROC_DASHBOARD_GET_PRODUCTION_QTY(string fACTORY_CD, string lINE)
        {
            var fACTORY_CDParameter = fACTORY_CD != null ?
                new ObjectParameter("FACTORY_CD", fACTORY_CD) :
                new ObjectParameter("FACTORY_CD", typeof(string));
    
            var lINEParameter = lINE != null ?
                new ObjectParameter("LINE", lINE) :
                new ObjectParameter("LINE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DASHBOARD_GET_PRODUCTION_QTY", fACTORY_CDParameter, lINEParameter);
        }
    }
}
